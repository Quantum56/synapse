// POSIX Error numbers, see https://en.wikipedia.org/wiki/Errno.h
// TODO: need to consider standard library builds here
#![no_std]
#[derive(Debug, Copy, Clone, Eq, PartialEq)]
#[repr(i32)]
#[allow(unused)]
#[allow(clippy::upper_case_acronyms)]
pub enum Errno {
    EPERM = 1, // Operation not permitted
    ENOENT = 2, // No such file or directory
    ESRCH = 3, // No such process
    EINTR = 4, // Interrupted system call
    EIO = 5, // Input/output error
    ENXIO = 6, // No such device or address
    E2BIG = 7, // Argument list too long
    ENOEXEC = 8, // Exec format error
    EBADF = 9, // Bad file descriptor
    ECHILD = 10, // No child processes
    EAGAIN = 11, // Resource temporarily unavailable
    ENOMEM = 12, // Cannot allocate memory
    EACCES = 13, // Permission denied
    EFAULT = 14, // Bad address
    ENOTBLK = 15, // Block device required
    EBUSY = 16, // Device or resource busy
    EEXIST = 17, // File exists
    EXDEV = 18, // Invalid cross-device link
    ENODEV = 19, // No such device
    ENOTDIR = 20, // Not a directory
    EISDIR = 21, // Is a directory
    EINVAL = 22, // Invalid argument
    ENFILE = 23, // Too many open files in system
    EMFILE = 24, // Too many open files
    ENOTTY = 25, // Inappropriate ioctl for device
    ETXTBSY = 26, // Text file busy
    EFBIG = 27, // File too large
    ENOSPC = 28, // No space left on device
    ESPIPE = 29, // Illegal seek
    EROFS = 30, // Read-only file system
    EMLINK = 31, // Too many links
    EPIPE = 32, // Broken pipe
    EDOM = 33, // Numerical argument out of domain
    ERANGE = 34, // Numerical result out of range
    EDEADLK = 35, // Resource deadlock avoided
    ENAMETOOLONG = 36, // File name too long
    ENOLCK = 37, // No locks available
    ENOSYS = 38, // Function not implemented
    ENOTEMPTY = 39, // Directory not empty
    ELOOP = 40, // Too many levels of symbolic links
    ENOMSG = 42, // No message of desired type
    EIDRM = 43, // Identifier removed
    ECHRNG = 44, // Channel number out of range
    EL2NSYNC = 45, // Level 2 not synchronized
    EL3HLT = 46, // Level 3 halted
    EL3RST = 47, // Level 3 reset
    ELNRNG = 48, // Link number out of range
    EUNATCH = 49, // Protocol driver not attached
    ENOCSI = 50, // No CSI structure available
    EL2HLT = 51, // Level 2 halted
    EBADE = 52, // Invalid exchange
    EBADR = 53, // Invalid request descriptor
    EXFULL = 54, // Exchange full
    ENOANO = 55, // No anode
    EBADRQC = 56, // Invalid request code
    EBADSLT = 57, // Invalid slot
    EBFONT = 59, // Bad font file format
    ENOSTR = 60, // Device not a stream
    ENODATA = 61, // No data available
    ETIME = 62, // Timer expired
    ENOSR = 63, // Out of streams resources
    ENONET = 64, // Machine is not on the network
    ENOPKG = 65, // Package not installed
    EREMOTE = 66, // Object is remote
    ENOLINK = 67, // Link has been severed
    EADV = 68, // Advertise error
    ESRMNT = 69, // Srmount error
    ECOMM = 70, // Communication error on send
    EPROTO = 71, // Protocol error
    EMULTIHOP = 72, // Multihop attempted
    EDOTDOT = 73, // RFS specific error
    EBADMSG = 74, // Bad message
    EOVERFLOW = 75, // Value too large for defined data type
    ENOTUNIQ = 76, // Name not unique on network
    EBADFD = 77, // File descriptor in bad state
    EREMCHG = 78, // Remote address changed
    ELIBACC = 79, // Can not access a needed shared library
    ELIBBAD = 80, // Accessing a corrupted shared library
    ELIBSCN = 81, // .lib section in a.out corrupted
    ELIBMAX = 82, // Attempting to link in too many shared libraries
    ELIBEXEC = 83, // Cannot exec a shared library directly
    EILSEQ = 84, // Invalid or incomplete multibyte or wide character
    ERESTART = 85, // Interrupted system call should be restarted
    ESTRPIPE = 86, // Streams pipe error
    EUSERS = 87, // Too many users
    ENOTSOCK = 88, // Socket operation on non-socket
    EDESTADDRREQ = 89, // Destination address required
    EMSGSIZE = 90, // Message too long
    EPROTOTYPE = 91, // Protocol wrong type for socket
    ENOPROTOOPT = 92, // Protocol not available
    EPROTONOSUPPORT = 93, // Protocol not supported
    ESOCKTNOSUPPORT = 94, // Socket type not supported
    EOPNOTSUPP = 95, // Operation not supported
    EPFNOSUPPORT = 96, // Protocol family not supported
    EAFNOSUPPORT = 97, // Address family not supported by protocol
    EADDRINUSE = 98, // Address already in use
    EADDRNOTAVAIL = 99, // Cannot assign requested address
    ENETDOWN = 100, // Network is down
    ENETUNREACH = 101, // Network is unreachable
    ENETRESET = 102, // Network dropped connection on reset
    ECONNABORTED = 103, // Software caused connection abort
    ECONNRESET = 104, // Connection reset by peer
    ENOBUFS = 105, // No buffer space available
    EISCONN = 106, // Transport endpoint is already connected
    ENOTCONN = 107, // Transport endpoint is not connected
    ESHUTDOWN = 108, // Cannot send after transport endpoint shutdown
    ETOOMANYREFS = 109, // Too many references: cannot splice
    ETIMEDOUT = 110, // Connection timed out
    ECONNREFUSED = 111, // Connection refused
    EHOSTDOWN = 112, // Host is down
    EHOSTUNREACH = 113, // No route to host
    EALREADY = 114, // Operation already in progress
    EINPROGRESS = 115, // Operation now in progress
    ESTALE = 116, // Stale file handle
    EUCLEAN = 117, // Structure needs cleaning
    ENOTNAM = 118, // Not a XENIX named type file
    ENAVAIL = 119, // No XENIX semaphores available
    EISNAM = 120, // Is a named type file
    EREMOTEIO = 121, // Remote I/O error
    EDQUOT = 122, // Disk quota exceeded
    ENOMEDIUM = 123, // No medium found
    EMEDIUMTYPE = 124, // Wrong medium type
    ECANCELED = 125, // Operation canceled
    ENOKEY = 126, // Required key not available
    EKEYEXPIRED = 127, // Key has expired
    EKEYREVOKED = 128, // Key has been revoked
    EKEYREJECTED = 129, // Key was rejected by service
    EOWNERDEAD = 130, // Owner died
    ENOTRECOVERABLE = 131, // State not recoverable
    ERFKILL = 132, // Operation not possible due to RF-kill
    EHWPOISON = 133, // Memory page has hardware error 
}

pub type SyscallResult = Result<usize, Errno>;

#[inline]
pub fn syscall_result(syscall_res: isize) -> SyscallResult {
    if syscall_res >= 0 {
        Ok(syscall_res as usize)
    } else {
        Err(unsafe { core::mem::transmute((-syscall_res) as i32) })
    }
}

pub fn syscall_name_by_no(n: usize) -> &'static str {
    match n {
        SYS_READ => "read",
        1 => "write",
        2 => "open",
        3 => "close",
        4 => "stat",
        5 => "fstat",
        6 => "lstat",
        7 => "poll",
        8 => "lseek",
        9 => "mmap",
        10 => "mprotect",
        11 => "munmap",
        12 => "brk",
        13 => "rt_sigaction",
        14 => "rt_sigprocmask",
        15 => "rt_sigreturn",
        16 => "ioctl",
        17 => "pread64",
        18 => "pwrite64",
        19 => "readv",
        20 => "writev",
        21 => "access",
        22 => "pipe",
        23 => "select",
        24 => "sched_yield",
        25 => "mremap",
        26 => "msync",
        27 => "mincore",
        28 => "madvise",
        29 => "shmget",
        30 => "shmat",
        31 => "shmctl",
        32 => "dup",
        33 => "dup2",
        34 => "pause",
        35 => "nanosleep",
        36 => "getitimer",
        37 => "alarm",
        38 => "setitimer",
        39 => "getpid",
        40 => "sendfile",
        41 => "socket",
        42 => "connect",
        43 => "accept",
        44 => "sendto",
        45 => "recvfrom",
        46 => "sendmsg",
        47 => "recvmsg",
        48 => "shutdown",
        49 => "bind",
        50 => "listen",
        51 => "getsockname",
        52 => "getpeername",
        53 => "socketpair",
        54 => "setsockopt",
        55 => "getsockopt",
        56 => "clone",
        57 => "fork",
        58 => "vfork",
        59 => "execve",
        60 => "exit",
        61 => "wait4",
        62 => "kill",
        63 => "uname",
        64 => "semget",
        65 => "semop",
        66 => "semctl",
        67 => "shmdt",
        68 => "msgget",
        69 => "msgsnd",
        70 => "msgrcv",
        71 => "msgctl",
        72 => "fcntl",
        73 => "flock",
        74 => "fsync",
        75 => "fdatasync",
        76 => "truncate",
        77 => "ftruncate",
        78 => "getdents",
        79 => "getcwd",
        80 => "chdir",
        81 => "fchdir",
        82 => "rename",
        83 => "mkdir",
        84 => "rmdir",
        85 => "creat",
        86 => "link",
        87 => "unlink",
        88 => "symlink",
        89 => "readlink",
        90 => "chmod",
        91 => "fchmod",
        92 => "chown",
        93 => "fchown",
        94 => "lchown",
        95 => "umask",
        96 => "gettimeofday",
        97 => "getrlimit",
        98 => "getrusage",
        99 => "sysinfo",
        100 => "times",
        101 => "ptrace",
        102 => "getuid",
        103 => "syslog",
        104 => "getgid",
        105 => "setuid",
        106 => "setgid",
        107 => "geteuid",
        108 => "getegid",
        109 => "setpgid",
        110 => "getppid",
        111 => "getpgrp",
        112 => "setsid",
        113 => "setreuid",
        114 => "setregid",
        115 => "getgroups",
        116 => "setgroups",
        117 => "setresuid",
        118 => "getresuid",
        119 => "setresgid",
        120 => "getresgid",
        121 => "getpgid",
        122 => "setfsuid",
        123 => "setfsgid",
        124 => "getsid",
        125 => "capget",
        126 => "capset",
        127 => "rt_sigpending",
        128 => "rt_sigtimedwait",
        129 => "rt_sigqueueinfo",
        130 => "rt_sigsuspend",
        131 => "sigaltstack",
        132 => "utime",
        133 => "mknod",
        134 => "uselib",
        135 => "personality",
        136 => "ustat",
        137 => "statfs",
        138 => "fstatfs",
        139 => "sysfs",
        140 => "getpriority",
        141 => "setpriority",
        142 => "sched_setparam",
        143 => "sched_getparam",
        144 => "sched_setscheduler",
        145 => "sched_getscheduler",
        146 => "sched_get_priority_max",
        147 => "sched_get_priority_min",
        148 => "sched_rr_get_interval",
        149 => "mlock",
        150 => "munlock",
        151 => "mlockall",
        152 => "munlockall",
        153 => "vhangup",
        154 => "modify_ldt",
        155 => "pivot_root",
        156 => "_sysctl",
        157 => "prctl",
        158 => "arch_prctl",
        159 => "adjtimex",
        160 => "setrlimit",
        161 => "chroot",
        162 => "sync",
        163 => "acct",
        164 => "settimeofday",
        165 => "mount",
        166 => "umount2",
        167 => "swapon",
        168 => "swapoff",
        169 => "reboot",
        170 => "sethostname",
        171 => "setdomainname",
        172 => "iopl",
        173 => "ioperm",
        174 => "create_module",
        175 => "init_module",
        176 => "delete_module",
        177 => "get_kernel_syms",
        178 => "query_module",
        179 => "quotactl",
        180 => "nfsservctl",
        181 => "getpmsg",
        182 => "putpmsg",
        183 => "afs_syscall",
        184 => "tuxcall",
        185 => "security",
        186 => "gettid",
        187 => "readahead",
        188 => "setxattr",
        189 => "lsetxattr",
        190 => "fsetxattr",
        191 => "getxattr",
        192 => "lgetxattr",
        193 => "fgetxattr",
        194 => "listxattr",
        195 => "llistxattr",
        196 => "flistxattr",
        197 => "removexattr",
        198 => "lremovexattr",
        199 => "fremovexattr",
        200 => "tkill",
        201 => "time",
        202 => "futex",
        203 => "sched_setaffinity",
        204 => "sched_getaffinity",
        205 => "set_thread_area",
        206 => "io_setup",
        207 => "io_destroy",
        208 => "io_getevents",
        209 => "io_submit",
        210 => "io_cancel",
        211 => "get_thread_area",
        212 => "lookup_dcookie",
        213 => "epoll_create",
        214 => "epoll_ctl_old",
        215 => "epoll_wait_old",
        216 => "remap_file_pages",
        217 => "getdents64",
        218 => "set_tid_address",
        219 => "restart_syscall",
        220 => "semtimedop",
        221 => "fadvise64",
        222 => "timer_create",
        223 => "timer_settime",
        224 => "timer_gettime",
        225 => "timer_getoverrun",
        226 => "timer_delete",
        227 => "clock_settime",
        228 => "clock_gettime",
        229 => "clock_getres",
        230 => "clock_nanosleep",
        231 => "exit_group",
        232 => "epoll_wait",
        233 => "epoll_ctl",
        234 => "tgkill",
        235 => "utimes",
        236 => "vserver",
        237 => "mbind",
        238 => "set_mempolicy",
        239 => "get_mempolicy",
        240 => "mq_open",
        241 => "mq_unlink",
        242 => "mq_timedsend",
        243 => "mq_timedreceive",
        244 => "mq_notify",
        245 => "mq_getsetattr",
        246 => "kexec_load",
        247 => "waitid",
        248 => "add_key",
        249 => "request_key",
        250 => "keyctl",
        251 => "ioprio_set",
        252 => "ioprio_get",
        253 => "inotify_init",
        254 => "inotify_add_watch",
        255 => "inotify_rm_watch",
        256 => "migrate_pages",
        257 => "openat",
        258 => "mkdirat",
        259 => "mknodat",
        260 => "fchownat",
        261 => "futimesat",
        262 => "newfstatat",
        263 => "unlinkat",
        264 => "renameat",
        265 => "linkat",
        266 => "symlinkat",
        267 => "readlinkat",
        268 => "fchmodat",
        269 => "faccessat",
        270 => "pselect6",
        271 => "ppoll",
        272 => "unshare",
        273 => "set_robust_list",
        274 => "get_robust_list",
        275 => "splice",
        276 => "tee",
        277 => "sync_file_range",
        278 => "vmsplice",
        279 => "move_pages",
        280 => "utimensat",
        281 => "epoll_pwait",
        282 => "signalfd",
        283 => "timerfd_create",
        284 => "eventfd",
        285 => "fallocate",
        286 => "timerfd_settime",
        287 => "timerfd_gettime",
        288 => "accept4",
        289 => "signalfd4",
        290 => "eventfd2",
        291 => "epoll_create1",
        292 => "dup3",
        293 => "pipe2",
        294 => "inotify_init1",
        295 => "preadv",
        296 => "pwritev",
        297 => "rt_tgsigqueueinfo",
        298 => "perf_event_open",
        299 => "recvmmsg",
        300 => "fanotify_init",
        301 => "fanotify_mark",
        302 => "prlimit64",
        303 => "name_to_handle_at",
        304 => "open_by_handle_at",
        305 => "clock_adjtime",
        306 => "syncfs",
        307 => "sendmmsg",
        308 => "setns",
        309 => "getcpu",
        310 => "process_vm_readv",
        311 => "process_vm_writev",
        312 => "kcmp",
        313 => "finit_module",
        314 => "sched_setattr",
        315 => "sched_getattr",
        316 => "renameat2",
        317 => "seccomp",
        318 => "getrandom",
        319 => "memfd_create",
        320 => "kexec_file_load",
        321 => "bpf",
        322 => "execveat",
        323 => "userfaultfd",
        324 => "membarrier",
        325 => "mlock2",
        326 => "copy_file_range",
        327 => "preadv2",
        328 => "pwritev2",
        329 => "pkey_mprotect",
        330 => "pkey_alloc",
        331 => "pkey_free",
        332 => "statx",
        333 => "io_pgetevents",
        334 => "rseq",

        65530 => "syn_debug",
        _ => "(unknown)"
    }
}

pub const SYS_READ: usize = 0;
pub const SYS_WRITE: usize = 1;
pub const SYS_OPEN: usize = 2;
pub const SYS_CLOSE: usize = 3;
pub const SYS_STAT: usize = 4;
pub const SYS_FSTAT: usize = 5;
pub const SYS_LSTAT: usize = 6;
pub const SYS_POLL: usize = 7;
pub const SYS_MMAP: usize = 9;
pub const SYS_MPROTECT: usize = 10;
pub const SYS_MUNMAP: usize = 11;
pub const SYS_BRK: usize = 12;
pub const SYS_RT_SIGACTION: usize = 13;
pub const SYS_RT_SIGPROCMASK: usize = 14;
pub const SYS_RT_SIGRETURN: usize = 15;
pub const SYS_IOCTL: usize = 16;
pub const SYS_WRITEV: usize = 20;
pub const SYS_PIPE: usize = 22;
pub const SYS_SELECT: usize = 23;
pub const SYS_DUP2: usize = 33;
pub const SYS_GETPID: usize = 39;
pub const SYS_SOCKET: usize = 41;
pub const SYS_CONNECT: usize = 42;
pub const SYS_ACCEPT: usize = 43;
pub const SYS_SENDTO: usize = 44;
pub const SYS_RECVFROM: usize = 45;
pub const SYS_SHUTDOWN: usize = 48;
pub const SYS_BIND: usize = 49;
pub const SYS_LISTEN: usize = 50;
pub const SYS_GETSOCKNAME: usize = 51;
pub const SYS_GETPEERNAME: usize = 52;
pub const SYS_GETSOCKOPT: usize = 55;
pub const SYS_CLONE: usize = 56;
pub const SYS_FORK: usize = 57;
pub const SYS_EXECVE: usize = 59;
pub const SYS_EXIT: usize = 60;
pub const SYS_WAIT4: usize = 61;
pub const SYS_KILL: usize = 62;
pub const SYS_UNAME: usize = 63;
pub const SYS_FCNTL: usize = 72;
pub const SYS_FSYNC: usize = 74;
pub const SYS_GETCWD: usize = 79;
pub const SYS_CHDIR: usize = 80;
pub const SYS_MKDIR: usize = 83;
pub const SYS_LINK: usize = 86;
pub const SYS_READLINK: usize = 89;
pub const SYS_CHMOD: usize = 90;
pub const SYS_CHOWN: usize = 92;
pub const SYS_GETUID: usize = 102;
pub const SYS_SYSLOG: usize = 103;
pub const SYS_SETUID: usize = 105;
pub const SYS_SETGID: usize = 106;
pub const SYS_GETEUID: usize = 107;
pub const SYS_SETPGID: usize = 109;
pub const SYS_GETPPID: usize = 110;
pub const SYS_GETPGRP: usize = 111;
pub const SYS_GETPGID: usize = 121;
pub const SYS_SETGROUPS: usize = 116;
pub const SYS_ARCH_PRCTL: usize = 158;
pub const SYS_REBOOT: usize = 169;
pub const SYS_GETTID: usize = 186;
pub const SYS_GETDENTS64: usize = 217;
pub const SYS_SET_TID_ADDRESS: usize = 218;
pub const SYS_CLOCK_GETTIME: usize = 228;
pub const SYS_EXIT_GROUP: usize = 231;
pub const SYS_UTIMES: usize = 235;
pub const SYS_LINKAT: usize = 265;
pub const SYS_GETRANDOM: usize = 318;